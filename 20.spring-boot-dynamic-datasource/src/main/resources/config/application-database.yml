spring:
  #数据源配置
  datasource:
    #    druid:
    #      # 连接池配置
    #      initial-size: 5
    #      min-idle: 5
    #      max-active: 20
    #      # 连接等待超时时间
    #      max-wait: 30000
    #      # 配置检测可以关闭的空闲连接间隔时间
    #      time-between-eviction-runs-millis: 60000
    #      # 配置连接在池中的最小生存时间
    #      min-evictable-idle-time-millis: 300000
    #      validation-query: select '1' from dual
    #      validation-query-timeout: 1800
    #      test-while-idle: true
    #      test-on-borrow: false
    #      test-on-return: false
    #      # 打开PSCache，并且指定每个连接上PSCache的大小
    #      pool-prepared-statements: true
    #      max-open-prepared-statements: 20
    #      max-pool-prepared-statement-per-connection-size: 20
    #      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
    #      #filters: stat,wall,log4j
    #      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
    #      aop-patterns: com.cmmplb.dynamic.datasource.*
    #      # WebStatFilter配置
    #      web-stat-filter:
    #        enabled: true
    #        # 添加过滤规则
    #        url-pattern: /*
    #        # 忽略过滤的格式
    #        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
    #      # StatViewServlet配置
    #      stat-view-servlet:
    #        enabled: true
    #        # 访问路径为/druid时，跳转到StatViewServlet
    #        url-pattern: /druid/*
    #        # 是否能够重置数据
    #        reset-enable: false
    #        # 需要账号密码才能访问控制台
    #        login-username: cmmplb
    #        login-password: cmmplb
    #        # IP白名单
    #        # allow: 127.0.0.1
    #        #　IP黑名单（共同存在时，deny优先于allow）
    #        # deny: 192.168.1.218
    #      # 配置StatFilter
    #      filter:
    #        stat:
    #          log-slow-sql: true

    dynamic:
      primary: master #设置主库为master
      strict: true #是否启用严格模式,默认不启动. 严格模式下未匹配到数据源直接报错, 非严格模式下则使用默认数据源primary所设置的数据源
      #seata: true #开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭
      #seata-mode: AT #支持XA及AT模式,默认AT
      lazy: true #默认false非懒启动，系统加载到数据源立即初始化连接池
      #多数据源选择算法clazz，默认负载均衡算法 - LoadBalanceDynamicDataSourceStrategy 轮询,默认。-RandomDynamicDataSourceStrategy 随机的。
      #strategy: com.baomidou.dynamic.datasource.strategy.LoadBalanceDynamicDataSourceStrategy
      datasource:
        master:
          username: root
          password: cmmplb
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/spring_boot_dynamic_datasource_master?characterEncoding=utf8&useSSL=false
            #druid: # 以下是独立参数，每个库可以重新设置
            #initial-size: 20
            #validation-query: select 1 FROM DUAL #比如oracle就需要重新设置这个
          #public-key: #（非全局参数）设置即表示启用加密,底层会自动帮你配置相关的连接参数和filter，推荐使用本项目自带的加密方法。
        #slave_1下划线命名则都处于slave组下
        slave_1:
          url: jdbc:mysql://127.0.0.1:3306/spring_boot_dynamic_datasource_slave1
          username: root
          password: cmmplb
          driver-class-name: com.mysql.cj.jdbc.Driver
        slave_2:
          url: jdbc:mysql://127.0.0.1:3306/spring_boot_dynamic_datasource_slave2
          username: root
          password: cmmplb
          driver-class-name: com.mysql.cj.jdbc.Driver
          # schema: classpath:db/schema-order.sql #初始化sql脚本
          # seata: false  #这个数据源不需要seata
        # 数据源2 oracle
      #        slave_3:
      #          #driver-class-name: oracle.jdbc.driver.OracleDriver
      #          driver-class-name: oracle.jdbc.OracleDriver #Orcale9之后改了，上面的不建议是使用了
      #          url: jdbc:oracle:thin:@192.168.66.166:1521:ORCL
      #          username: system
      #          password: orcl
      #以下是支持的全局默认值
      druid:
        # 连接池配置
        initial-size: 5
        min-idle: 5
        max-active: 20
        # 连接等待超时时间
        max-wait: 30000
        # 配置检测可以关闭的空闲连接间隔时间
        time-between-eviction-runs-millis: 60000
        # 配置连接在池中的最小生存时间
        min-evictable-idle-time-millis: 300000
        validation-query: select '1' from dual
        validation-query-timeout: 1800
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 20


#      druid: #以下是支持的全局默认值
#        initial-size:
#        max-active:
#        min-idle:
#        max-wait:
#        time-between-eviction-runs-millis:
#        time-between-log-stats-millis:
#        stat-sqlmax-size:
#        min-evictable-idle-time-millis:
#        max-evictable-idle-time-millis:
#        test-while-idle:
#        test-on-borrow:
#        test-on-return:
#        validation-query:
#        validation-query-timeout:
#        use-global-datasource-stat:
#        async-init:
#        clear-filters-enable:
#        reset-stat-enable:
#        not-full-timeout-retry-count:
#        max-wait-thread-count:
#        fail-fast:
#        phyTimeout-millis:
#        keep-alive:
#        pool-prepared-statements:
#        init-variants:
#        init-global-variants:
#        use-unfair-lock:
#        kill-when-socket-read-timeout:
#        connection-properties:
#        max-pool-prepared-statement-per-connection-size:
#        init-connection-sqls:
#        share-prepared-statements:
#        connection-errorretry-attempts:
#        break-after-acquire-failure:
#        filters: stat # 注意这个值和druid原生不一致，默认启动了stat
#        wall:
#          noneBaseStatementAllow:
#          callAllow:
#          selectAllow:
#          selectIntoAllow:
#          selectIntoOutfileAllow:
#          selectWhereAlwayTrueCheck:
#          selectHavingAlwayTrueCheck:
#          selectUnionCheck:
#          selectMinusCheck:
#          selectExceptCheck:
#          selectIntersectCheck:
#          createTableAllow:
#          dropTableAllow:
#          alterTableAllow:
#          renameTableAllow:
#          hintAllow:
#          lockTableAllow:
#          startTransactionAllow:
#          blockAllow:
#          conditionAndAlwayTrueAllow:
#          conditionAndAlwayFalseAllow:
#          conditionDoubleConstAllow:
#          conditionLikeTrueAllow:
#          selectAllColumnAllow:
#          deleteAllow:
#          deleteWhereAlwayTrueCheck:
#          deleteWhereNoneCheck:
#          updateAllow:
#          updateWhereAlayTrueCheck:
#          updateWhereNoneCheck:
#          insertAllow:
#          mergeAllow:
#          minusAllow:
#          intersectAllow:
#          replaceAllow:
#          setAllow:
#          commitAllow:
#          rollbackAllow:
#          useAllow:
#          multiStatementAllow:
#          truncateAllow:
#          commentAllow:
#          strictSyntaxCheck:
#          constArithmeticAllow:
#          limitZeroAllow:
#          describeAllow:
#          showAllow:
#          schemaCheck:
#          tableCheck:
#          functionCheck:
#          objectCheck:
#          variantCheck:
#          mustParameterized:
#          doPrivilegedAllow:
#          dir:
#          tenantTablePattern:
#          tenantColumn:
#          wrapAllow:
#          metadataAllow:
#          conditionOpXorAllow:
#          conditionOpBitwseAllow:
#          caseConditionConstAllow:
#          completeInsertValuesCheck:
#          insertValuesCheckSize:
#          selectLimit:
#        stat:
#          merge-sql:
#          log-slow-sql:
#          slow-sql-millis:

#           ......

# 生成 publickey 和密码，推荐使用本项目自带的加密方法。
# java -cp druid-1.1.10.jar com.alibaba.druid.filter.config.ConfigTools youpassword