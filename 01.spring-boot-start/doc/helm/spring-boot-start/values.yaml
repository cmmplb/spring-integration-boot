# Default values for manager-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# pod运行数量
replicaCount: 1
namespace: cmmplb
image:
  # 镜像库地址
  repository: "registry.cn-hangzhou.aliyuncs.com/cmmplb/spring-boot-start"
  # 镜像拉取策略
  pullPolicy: IfNotPresent # Always
  version: 1.0.0

deployment:
  # 服务管理端口
  managementPort: 80

# 环境变量
env:
  open:
    PROFILE_ACTIVE: local
    # 参数能够达到的效果就是, 在服务启动的时候真实的分配物理内存给JVM, 而不再是虚拟内存, 效果是可以加快代码运行效率, 缺点也是有的, 毕竟把分配物理内存的事提前放到JVM进程启动时做了, 自然就会影响JVM进程的启动时间, 导致启动时间降低几个数量级。
    # JVM_MEM: "-XX:+AlwaysPreTouch -Xms1024m -Xmx2600m"
    # 数据库连接地址
    SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/momo_cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true
    # 数据库用户名
    SPRING_DATASOURCE_USERNAME: root
    # 数据库密码
    SPRING_DATASOURCE_PASSWORD: cmmplb

persistence:
  # 是否启用持久化存储
  enabled: false
  pvcName: local-sup-nas-app
  # 绑定的pvc名称
  # existingClaim:
  # 持久化路径
  # subPath:

service:
  # 是否创建k8s service
  enabled: true
  # service类型
  type: ClusterIP
  # service名称
  name: spring-boot-start
  # service端口
  port: 80
  # 指定绑定的node的端口(默认的取值范围是：30000-32767), 如果不指定, 会默认分配
  nodePort: 30080
  protocol: TCP

ingress:
  # 是否创建k8s ingress
  enabled: false

resources:
  # k8s中容器能使用资源的资源最大值
  limits:
    cpu: 4
    memory: 8Gi
  # k8s中容器使用的最小资源需求
  requests:
    cpu: 100m
    memory: 1.5Gi

nodeSelector:
  app: springboot